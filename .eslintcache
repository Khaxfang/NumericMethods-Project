[{"E:\\kf\\numeric\\numeric\\src\\index.js":"1","E:\\kf\\numeric\\numeric\\src\\App.js":"2","E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\False_position.js":"3","E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\Graphical.js":"4","E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\Secant.js":"5","E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\Bisection.js":"6","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Cramer.js":"7","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Gauss.js":"8","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Jordan.js":"9","E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\Onepoint.js":"10","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Jacobi.js":"11","E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\Newton-raphson.js":"12","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\LU.js":"13","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Inverse.js":"14","E:\\kf\\numeric\\numeric\\src\\Calculate\\Interpolation\\Newton.js":"15","E:\\kf\\numeric\\numeric\\src\\Calculate\\Interpolation\\Lagrange.js":"16","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Gradient.js":"17","E:\\kf\\numeric\\numeric\\src\\Calculate\\Interpolation\\Spline.js":"18","E:\\kf\\numeric\\numeric\\src\\Calculate\\Regression\\Linear.js":"19","E:\\kf\\numeric\\numeric\\src\\Calculate\\Regression\\MultipleLinear.js":"20","E:\\kf\\numeric\\numeric\\src\\Calculate\\Integration\\CompositeTrapzoidal.js":"21","E:\\kf\\numeric\\numeric\\src\\Calculate\\Integration\\CompositeSimpson.js":"22","E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\ForwardH2.js":"23","E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\Forwardh.js":"24","E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\Backwardh2.js":"25","E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\Backwardh.js":"26","E:\\kf\\numeric\\numeric\\src\\Calculate\\Regression\\Polynomial.js":"27","E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\Centralh.js":"28","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Cholesky.js":"29","E:\\kf\\numeric\\numeric\\src\\Calculate\\ODE\\Heun.js":"30","E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\Centralh2.js":"31","E:\\kf\\numeric\\numeric\\src\\Calculate\\ODE\\Euler.js":"32","E:\\kf\\numeric\\numeric\\src\\Calculate\\ODE\\Modified_Euler.js":"33","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Seidel.js":"34","E:\\kf\\numeric\\numeric\\src\\services\\Services.js":"35","E:\\kf\\numeric\\numeric\\src\\components\\Graph.js":"36"},{"size":480,"mtime":1653294880489,"results":"37","hashOfConfig":"38"},{"size":10522,"mtime":1653399648658,"results":"39","hashOfConfig":"38"},{"size":5219,"mtime":1653397909365,"results":"40","hashOfConfig":"38"},{"size":3974,"mtime":1653397911229,"results":"41","hashOfConfig":"38"},{"size":4322,"mtime":1653398087584,"results":"42","hashOfConfig":"38"},{"size":6131,"mtime":1653397907435,"results":"43","hashOfConfig":"38"},{"size":5933,"mtime":1653397875333,"results":"44","hashOfConfig":"38"},{"size":6483,"mtime":1653397877207,"results":"45","hashOfConfig":"38"},{"size":6703,"mtime":1653397884688,"results":"46","hashOfConfig":"38"},{"size":3960,"mtime":1653397915780,"results":"47","hashOfConfig":"38"},{"size":8263,"mtime":1653397882913,"results":"48","hashOfConfig":"38"},{"size":4032,"mtime":1653397913639,"results":"49","hashOfConfig":"38"},{"size":5485,"mtime":1653397887618,"results":"50","hashOfConfig":"38"},{"size":6138,"mtime":1653397881097,"results":"51","hashOfConfig":"38"},{"size":7758,"mtime":1653397866233,"results":"52","hashOfConfig":"38"},{"size":7305,"mtime":1653397862063,"results":"53","hashOfConfig":"38"},{"size":9359,"mtime":1653397879272,"results":"54","hashOfConfig":"38"},{"size":7982,"mtime":1653397868003,"results":"55","hashOfConfig":"38"},{"size":6704,"mtime":1653397900416,"results":"56","hashOfConfig":"38"},{"size":7849,"mtime":1653397902476,"results":"57","hashOfConfig":"38"},{"size":3593,"mtime":1653397858012,"results":"58","hashOfConfig":"38"},{"size":3739,"mtime":1653397856173,"results":"59","hashOfConfig":"38"},{"size":4252,"mtime":1653397852233,"results":"60","hashOfConfig":"38"},{"size":4044,"mtime":1653397849782,"results":"61","hashOfConfig":"38"},{"size":4257,"mtime":1653397836686,"results":"62","hashOfConfig":"38"},{"size":4021,"mtime":1653397803561,"results":"63","hashOfConfig":"38"},{"size":7659,"mtime":1653397904402,"results":"64","hashOfConfig":"38"},{"size":4079,"mtime":1653397840300,"results":"65","hashOfConfig":"38"},{"size":7476,"mtime":1653397873437,"results":"66","hashOfConfig":"38"},{"size":4464,"mtime":1653397896119,"results":"67","hashOfConfig":"38"},{"size":4371,"mtime":1653397845750,"results":"68","hashOfConfig":"38"},{"size":4439,"mtime":1653397894408,"results":"69","hashOfConfig":"38"},{"size":4787,"mtime":1653397898048,"results":"70","hashOfConfig":"38"},{"size":8379,"mtime":1653397889423,"results":"71","hashOfConfig":"38"},{"size":1174,"mtime":1651130919000,"results":"72","hashOfConfig":"38"},{"size":738,"mtime":1651130919000,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1hzlxxy",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"E:\\kf\\numeric\\numeric\\src\\index.js",[],["149","150"],"E:\\kf\\numeric\\numeric\\src\\App.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\False_position.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\Graphical.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\Secant.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\Bisection.js",["151"],"import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { error, func, getXL_XR_from_API } from '../../services/Services';\nimport Graph from '../../components/Graph';\n\nconst InputStyle = {\n    background: \"#F4D03F\",\n    color: \"#000000\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar dataInTable = []\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"XL\",\n        dataIndex: \"xl\",\n        key: \"xl\"\n    },\n    {\n        title: \"XR\",\n        dataIndex: \"xr\",\n        key: \"xr\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nclass Bisection extends Component {\n\n    constructor() {\n        super();\n        this.state = this.getInitialState();\n        this.handleChange = this.handleChange.bind(this);\n        this.bisection = this.bisection.bind(this);\n        this.handleAPI = this.handleAPI.bind(this);\n    }\n\n    getInitialState = () => ({\n        fx: \"\",\n        xl: 0,\n        xr: 0,\n        showOutputCard: false,\n        showGraph: false,\n        moveLeft: false\n        \n    })\n\n    bisection(xl, xr) {\n        var increaseFunction = false;\n        var xm = 0;\n        var sum = parseFloat(0.000000);\n        var n = 0;\n        var data = []\n        data['xl'] = []\n        data['xr'] = []\n        data['x'] = []\n        data['error'] = []\n        if (func(this.state.fx, xl) < func(this.state.fx, xr)) {\n            increaseFunction = true;\n        }\n\n        do {\n            xm = (xl + xr) / 2;\n            if (func(this.state.fx, xm) * func(this.state.fx, xr) < 0) {\n                sum = error(xm, xr);\n                if (increaseFunction) {\n                    xl = xm;\n                }\n                else {\n                    xr = xm;\n                }\n\n            }\n            else {\n                sum = error(xm, xl);\n                if (increaseFunction) {\n                    xr = xm;\n                }\n                else {\n                    xl = xm;\n                }\n            }\n            data['xl'][n] = xl;\n            data['xr'][n] = xr;\n            data['x'][n] = xm.toFixed(8);\n            data['error'][n] = Math.abs(sum).toFixed(8);\n            n++;\n        } while (Math.abs(sum) > 0.000001);\n        this.createTable(data['xl'], data['xr'], data['x'], data['error']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true,\n\n        })\n\n\n    }\n\n    async handleAPI() {\n    \n        const response = await getXL_XR_from_API();\n        this.setState({\n            fx: response[0].fx,\n            xl: response[0].xl,\n            xr: response[0].xr\n        })\n        const { fx, xl, xr } = this.state;\n\n        this.bisection(parseFloat(xl), parseFloat(xr));\n\n    }\n\n    createTable(xl, xr, x, error) {\n        dataInTable = []\n        for (var i = 0; i < xl.length; i++) {\n            dataInTable.push({\n                iteration: i + 1,\n                xl: xl[i],\n                xr: xr[i],\n                x: x[i],\n                error: error[i]\n            });\n        }\n\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n\n    }\n    render() {\n        let { fx, xl, xr } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Bisection</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"white\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                            id=\"inputCard\"\n                        >\n                            <h2 style={{color:\"black\"}}>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\n                            <h2 style={{color:\"black\"}}>X<sub>L</sub></h2><Input size=\"large\" name=\"xl\" style={InputStyle}></Input>\n                            <h2 style={{color:\"black\"}}>X<sub>R</sub></h2><Input size=\"large\" name=\"xr\" style={InputStyle}></Input><br /><br />\n                            <div className=\"row\">\n                                <div className=\"col-3\">\n                                    <Button id=\"submit_button\" onClick={\n                                    () => this.bisection(parseFloat(xl), parseFloat(xr))\n                                }\n                                    style={{ background: \"#4caf50\", color: \"black\" }}>Submit</Button>\n                                </div>\n                                <div className=\"col\">\n                                    <Button id=\"submit_button_api\" onClick={() => this.handleAPI()}\n                                    style={{  color: \"black\" }}>Calculate from data that get from API</Button>\n                                </div>\n                            </div>\n\n\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showGraph && <Graph fx={fx} title=\"Bisection Method\" />}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{ width: \"100%\", background: \"#999999\", color: \"#FFFFFFFF\" }}\n                            id=\"outputCard\"\n                        >\n                            <Table pagination={{defaultPageSize: 5}} columns={columns} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}></Table>\n                        </Card>\n                    }\n                </div>\n            </div>\n\n        );\n    }\n}\nexport default Bisection;","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Cramer.js",["152"],"import React, { Component } from 'react'\nimport { Card, Input, Button } from 'antd';\nimport { det } from 'mathjs';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\n\nconst InputStyle = {\n    background: \"#F4D03F\",\n    color: \"#000000\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\n\nvar A = [], B = [], answer = [], matrixA = [], matrixB = []\nclass Cramer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: parseInt(0),\n            column: parseInt(0),\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.cramer = this.cramer.bind(this);\n\n    }\n\n    cramer() {\n        this.initMatrix();\n        var counter = 0;\n        \n\n        while (counter != this.state.row) {\n            var transformMatrix = JSON.parse(JSON.stringify(A)); //Deep copy\n            for (var i = 0; i < this.state.row; i++) {\n                for (var j = 0; j < this.state.column; j++) {\n                    if (j === counter) {\n                        transformMatrix[i][j] = B[i]\n                        break;\n                    }\n\n                }\n\n            }\n            counter++;\n            answer.push(<h2>X<sub>{counter}</sub>=&nbsp;&nbsp;{Math.round(det(transformMatrix)) / Math.round(det(A))}</h2>)\n            answer.push(<br />)\n\n        }\n        this.setState({\n            showOutputCard: true\n        });\n\n    }\n\n    createMatrix(row, column) {\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"14%\",\n                    height: \"50%\",\n                    backgroundColor: \"#06d9a0\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"14%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n\n\n    }\n\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        let { row, column } = this.state;\n        return (\n            <div style={{ padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Cramer's Rule</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"white\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n\n                            {this.state.showDimentionForm &&\n                                <div>\n                                    <h4>Row</h4><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h4>Column</h4><Input size=\"large\" name=\"column\" style={InputStyle}></Input><br />\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => this.createMatrix(row, column)\n                                    }\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n                            {this.state.showMatrixForm &&\n                                <div>\n                                    <h2>Matrix [A]</h2><br />{matrixA}\n                                    <h2>Vector [B]<br /></h2>{matrixB}<br/>\n                                    <Button\n                                        size=\"large\"\n                                        id=\"matrix_button\"\n                                        style={{ background: \"blue\", color: \"white\" }}\n                                        onClick={() => this.cramer()}>\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n\n\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ width: \"100%\", background: \"#999999\", color: \"#FFFFFFFF\", float: \"left\" }}\n                                onChange={this.handleChange}>\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{answer}</p>\n                            </Card>\n                        }\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\nexport default Cramer;\n\n\n\n\n","E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Gauss.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Jordan.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\Onepoint.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Jacobi.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Root of Equation\\Newton-raphson.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\LU.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Inverse.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Interpolation\\Newton.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Interpolation\\Lagrange.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Gradient.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Interpolation\\Spline.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Regression\\Linear.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Regression\\MultipleLinear.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Integration\\CompositeTrapzoidal.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Integration\\CompositeSimpson.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\ForwardH2.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\Forwardh.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\Backwardh2.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\Backwardh.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Regression\\Polynomial.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\Centralh.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Cholesky.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\ODE\\Heun.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Differentiation\\Centralh2.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\ODE\\Euler.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\ODE\\Modified_Euler.js",[],"E:\\kf\\numeric\\numeric\\src\\Calculate\\Linear Algebra\\Seidel.js",[],"E:\\kf\\numeric\\numeric\\src\\services\\Services.js",[],"E:\\kf\\numeric\\numeric\\src\\components\\Graph.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":123,"column":17,"nodeType":"159","messageId":"160","endLine":123,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":38,"column":24,"nodeType":"163","messageId":"164","endLine":38,"endColumn":26},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'fx' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]